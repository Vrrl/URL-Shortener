image: python:latest

stages:
  - lint
  - test
  - build
  - deploy

variables: 
  PROJECT_SHORT_NAME: URLShortner

# black_job:
#   stage: lint
#   before_script:
#     - pip install black
#   script:
#     - black --fast .

# flake8_job:
#   stage: lint
#   before_script:
#     - pip install flake8
#   script:
#     - flake8 .

# pytest_job:
#   stage: test
#   before_script:
#     - pip install -r requirements.txt
#   script:
#     - pytest . -v -s
#   only:
#     changes:
#       - src/**/*
#       - tests/*
#       - '*.py'
#   coverage: '/TOTAL.*\s+(\d+%)$/'
#
build_docker_image:
  stage: build
  image: docker:latest
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind
  before_script:
    - export PROJECT_VERSION=0.0.$TAG
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY_DOCKER
  script:
    - docker build -t "yvrrl/url_shortener:$PROJECT_VERSION" .
    - docker push "yvrrl/url_shortener:$PROJECT_VERSION"
  only:
    - stagging
    - tags

deploy_stagging_job:
  stage: deploy
  variables:
    TAG: stagging
  before_script:
    - export PROJECT_VERSION=0.0.$(git rev-list --count HEAD)-$TAG
  script:
    - printenv PROJECT_VERSION
  only:
    - stagging

deploy_production_job:
  stage: deploy
  variables:
    TAG: prod
  before_script:
    - export PROJECT_VERSION=0.0.$(git rev-list --count HEAD)-$TAG
  script:
    - printenv PROJECT_VERSION
  only:
    - tags